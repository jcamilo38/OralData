@page "/specialtie/edit/{SpecialtieId:int}"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlterService
@attribute [Authorize(Roles = "Admin")]

<h3>Editar Especialidad</h3>

@if (specialtie is null)
{
    <Loading />
}
else
{
    <SpecialtiesForm @ref="specialtiesForm" Specialtie="specialtie" OnValidSubmit="SaveAsync" ReturnAction="Return" />
}

@code {
    private Specialtie? specialtie;
    private SpecialtiesForm? specialtiesForm;

    [Parameter]
    public int SpecialtieId { get; set; }

    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; } = default!;


    protected override async Task OnParametersSetAsync()
    {
        var response = await repository.GetAsync<Specialtie>($"api/specialtie/{SpecialtieId}");
        if (response.Error)
        {
            if (response.HttpResponseMessage.StatusCode == HttpStatusCode.NotFound)
            {
                Return();
            }
            var message = await response.GetErrorMessageAsync();
            await sweetAlterService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;

        }
        specialtie = response.Response;

    }
    private async Task SaveAsync()
    {
        var response = await repository.PutAsync($"/api/specialtie", specialtie);
        if (response.Error)
        {
            var message = await response.GetErrorMessageAsync();
            await sweetAlterService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        await BlazoredModal.CloseAsync(ModalResult.Ok());
        Return();
        var toast = sweetAlterService.Mixin(new SweetAlertOptions
            {
                Toast = true,
                Position = SweetAlertPosition.BottomEnd,
                ShowConfirmButton = true,
                Timer = 3000
            });
        await toast.FireAsync(icon: SweetAlertIcon.Success, message: "Cambios guardados con éxito.");

    }
    private void Return()
    {
        specialtiesForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/specialtie");
    }
}